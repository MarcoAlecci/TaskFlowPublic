
     * Get a list of sizes compatible with {@code klass} to use as an output.
     *
     * <p>Some of the supported classes may support additional formats beyond
     * {@link ImageFormat#PRIVATE}; this function only returns
     * sizes for {@link ImageFormat#PRIVATE}. For example, {@link android.media.ImageReader}
     * supports {@link ImageFormat#YUV_420_888} and {@link ImageFormat#PRIVATE}, this method will
     * only return the sizes for {@link ImageFormat#PRIVATE} for {@link android.media.ImageReader}
     * class.</p>
     *
     * <p>If a well-defined format such as {@code NV21} is required, use
     * {@link #getOutputSizes(int)} instead.</p>
     *
     * <p>The {@code klass} should be a supported output, that querying
     * {@code #isOutputSupportedFor(Class)} should return {@code true}.</p>
     *
     * @param klass
     *          a non-{@code null} {@link Class} object reference
     * @return
     *          an array of supported sizes for {@link ImageFormat#PRIVATE} format,
     *          or {@code null} iff the {@code klass} is not a supported output.
     *
     *
     * @throws NullPointerException if {@code klass} was {@code null}
     *
     * @see #isOutputSupportedFor(Class)
     