
     * Set an identifier for this Intent.  If set, this provides a unique identity for this Intent,
     * allowing it to be unique from other Intents that would otherwise look the same.  In
     * particular, this will be used by {@link #filterEquals(Intent)} to determine if two
     * Intents are the same as with other fields like {@link #setAction}.  However, unlike those
     * fields, the identifier is <em>never</em> used for matching against an {@link IntentFilter};
     * it is as if the identifier has not been set on the Intent.
     *
     * <p>This can be used, for example, to make this Intent unique from other Intents that
     * are otherwise the same, for use in creating a {@link android.app.PendingIntent}.  (Be aware
     * however that the receiver of the PendingIntent will see whatever you put in here.)  The
     * structure of this string is completely undefined by the platform, however if you are going
     * to be exposing identifier strings across different applications you may need to define
     * your own structure if there is no central party defining the contents of this field.</p>
     *
     * @param identifier The identifier for this Intent.  The contents of the string have no
     *                   meaning to the system, except whether they are exactly the same as
     *                   another identifier.
     *
     * @return Returns the same Intent object, for chaining multiple calls
     * into a single statement.
     *
     * @see #getIdentifier
     