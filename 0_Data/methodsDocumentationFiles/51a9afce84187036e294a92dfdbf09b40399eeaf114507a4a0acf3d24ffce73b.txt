
     * Verify the hostname of the certificate used by the other end of a connected socket using the
     * {@link HostnameVerifier} obtained from {@code
     * HttpsURLConnection.getDefaultHostnameVerifier()}. You MUST call this if you did not supply a
     * hostname to {@link #createSocket()}.  It is harmless to call this method redundantly if the
     * hostname has already been verified.
     *
     * <p>Wildcard certificates are allowed to verify any matching hostname, so
     * "foo.bar.example.com" is verified if the peer has a certificate for "*.example.com".
     *
     * @param socket An SSL socket which has been connected to a server
     * @param hostname The expected hostname of the remote server
     * @throws IOException if something goes wrong handshaking with the server
     * @throws SSLPeerUnverifiedException if the server cannot prove its identity
     *
     * @hide
     